@use 'variables';

html {
    color: variables.$text-color;
    font-size: 100% // or 62.5% or whatever you like, it doesn't matter, it's just a browser fix, however "rem" units will be based on that value, so make it confortable for calculations */
}

body {
    font-size: 1.35em; /* That is your text's default font size. Here i chose 12px */
    background-color: variables.$background-color-1;
}

h1 { /* or whatever element you want to change the font size of */
    font-size: 1.85rem; /* which equals to 20px if html's font-size was set to 100% */
}

input {
    font-size: 1.15rem;
}

fieldset {

  box-sizing: border-box;
  border: 5px double variables.$secondary-color;
  border-radius: 10px;
  width: fit-content;
  min-width: 320px;
  background-color: variables.$background-color-1;
  overflow: wrap;
  margin: 30px auto 0 auto;

  legend {

    position: relative;
    box-sizing: border-box;
    top: -12px;
    border: 3px double variables.$secondary-color;
    border-bottom: 1px solid variables.$secondary-color;
    border-radius: 10px 10px 0px 0px;
    padding: 5px;
    background-color: variables.$accent-color;

  }

}

.horizontal-input {

    display: flex;
    flex-direction: row;
    column-gap: 1rem;
    align-items: center;
    flex-wrap: wrap;

}

.vertical-input {

    display: flex;
    flex-direction: column;
    flex-wrap: scroll;

}

.disabled-input {
  color: gray !important;
}

.input-label {
    margin: 0px 5px 5px 0px;
}

.disabled-input-label {
  margin: 0px 5px 5px 0px;
  color: gray;
}

.input-border {

    border: 2px solid variables.$input-border-color;
    border-radius: 4px;
    background-color: variables.$accent-color;
    padding: 0.5rem;
    width: fit-content;

    transition: border 0.2s linear;

    &:focus-within, &:hover {
        border: 2px solid variables.$shadow-color;
    }

}

a {

    color: variables.$text-color;
    padding: 0.5rem;
    text-decoration: none;
    outline: none; 
    border-bottom: 2px solid variables.$input-border-color;
    border-radius: 4px;
    width: fit-content;
    transition: border 0.2s linear;

    &:hover {
        border-bottom: 2px solid variables.$shadow-color;
    }

}

input[type=text] {

    color: variables.$text-color;
    padding: 0.5rem;
    outline: none; 
    border: 2px solid variables.$input-border-color;
    border-radius: 4px;
    width: fit-content;
    transition: border 0.2s linear;

    &:focus {
        border: 2px solid variables.$shadow-color;
    }

}

input[type=radio], input[type=checkbox] {

    display: none;
    box-shadow: none;
    /* transition: box-shadow 0.5s linear; */

    &:checked + label {

        box-shadow: 0px 3px 0px 0px variables.$shadow-color;

    }
}

.date-input {

    display: flex;
    flex-direction: row;
    column-gap: 5px;
    align-items: center;
    justify-content: start;
    flex-wrap: wrap;

    border: 2px solid variables.$input-border-color;
    border-radius: 4px;
    background-color: variables.$accent-color;
    padding-right: 0.5rem;
    min-width: 25ch;
    width: fit-content;
    height: fit-content;

    transition: border 0.2s linear;

    input[type=text] {

        border: none;
        padding: none;

        color: variables.$text-color;
        outline: none;
        max-width: 10ch;
        height: 1.5rem;
        background-color: variables.$accent-color;

    }

    /* span { */
    /*     width: 40%; */
    /* } */

    &:focus-within, &:hover {
        border: 2px solid variables.$shadow-color;
    }

}

.error {
    color: variables.$error-color;
}
